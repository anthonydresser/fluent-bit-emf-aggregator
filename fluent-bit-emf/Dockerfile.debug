FROM ubuntu:20.04 as builder

# Install Go 1.21 and delve debugger dependencies
RUN apt-get update && apt-get install -y wget git gcc build-essential
RUN wget https://go.dev/dl/go1.20.13.linux-amd64.tar.gz && \
    tar -C /usr/local -xzf go1.20.13.linux-amd64.tar.gz
ENV PATH=$PATH:/usr/local/go/bin

# Install Delve debugger (version 1.21.0 is compatible with Go 1.20)
RUN go install github.com/go-delve/delve/cmd/dlv@v1.21.0

WORKDIR /fluent-bit-emf
COPY . .

# Build with debug symbols
RUN CGO_ENABLED=1 GOOS=linux \
    go build -buildmode=c-shared \
    -gcflags="all=-N -l" \
    -o out_emf_aggregator.so .

FROM debian:bullseye-slim as fluent-bit

# Install Fluent Bit
RUN apt-get update && \
    apt-get install -y --no-install-recommends \
    ca-certificates \
    curl \
    gdb \
    procps \
    gnupg2 \
    && curl https://packages.fluentbit.io/fluentbit.key | gpg --dearmor > /usr/share/keyrings/fluentbit-keyring.gpg \
    && echo "deb [signed-by=/usr/share/keyrings/fluentbit-keyring.gpg] https://packages.fluentbit.io/debian/bullseye bullseye main" >> /etc/apt/sources.list.d/fluent-bit.list \
    && apt-get update \
    && apt-get install -y fluent-bit \
    && rm -rf /var/lib/apt/lists/*

# Copy delve debugger from builder
COPY --from=builder /fluent-bit-emf /fluent-bit-emf
COPY --from=builder /root/go/bin/dlv /usr/local/bin/dlv
COPY --from=builder /fluent-bit-emf/out_emf_aggregator.so /fluent-bit/plugins/
COPY fluent-bit.conf /fluent-bit/etc/fluent-bit.conf
COPY plugins.conf /fluent-bit/etc/plugins.conf

# Add debug entrypoint script
RUN echo '#!/bin/sh\n\
/opt/fluent-bit/bin/fluent-bit -c /fluent-bit/etc/fluent-bit.conf -v & \n\
sleep 2\n\
FB_PID=$(pgrep fluent-bit)\n\
if [ -n "$FB_PID" ]; then\n\
    echo "Attaching debugger to Fluent Bit process $FB_PID"\n\
    dlv --listen=:2345 --headless=true --api-version=2 --accept-multiclient attach $FB_PID\n\
else\n\
    echo "Failed to find Fluent Bit process"\n\
    exit 1\n\
fi' > /debug-entrypoint.sh && chmod +x /debug-entrypoint.sh

# Use debug entrypoint for development
CMD ["/debug-entrypoint.sh"]
