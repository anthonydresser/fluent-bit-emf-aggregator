name: Integration Test

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

jobs:
  integration:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Cache Docker layers
        uses: actions/cache@v3
        with:
          path: /tmp/.buildx-cache
          key: ${{ runner.os }}-buildx-${{ github.sha }}
          restore-keys: |
            ${{ runner.os }}-buildx-

      - name: Build and cache images
        uses: docker/build-push-action@v5
        with:
          context: .
          push: false
          load: true
          cache-from: type=local,src=/tmp/.buildx-cache
          cache-to: type=local,dest=/tmp/.buildx-cache-new,mode=max

      - name: Move cache
        run: |
          rm -rf /tmp/.buildx-cache
          mv /tmp/.buildx-cache-new /tmp/.buildx-cache

      - name: Start containers
        run: docker compose up --build -d
        
      - name: Wait for completion and check exit codes
        run: |
          # Wait for emf-generator to finish
          EXIT_CODE=$(docker compose wait emf-generator)
          if [ "$EXIT_CODE" != "0" ]; then
            echo "emf-generator failed with exit code $EXIT_CODE"
            docker compose logs
            exit 1
          fi
          
          # Check other containers' health
          if [ "$(docker compose ps -q -f status=exited -f exitcode=1)" ]; then
            echo "One or more containers exited with non-zero status"
            docker compose logs
            exit 1
          fi

      - name: Cleanup
        if: always()
        run: docker compose down -v
