name: Integration Test

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

jobs:
  integration:
    runs-on: ubuntu-latest
    permissions: write-all
    steps:
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2

      - name: Login to Docker Registry
        uses: docker/login-action@v2
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - uses: actions/checkout@v4

      - name: Create cache config
        run: |
          cat > docker-compose-cache.json << 'EOF'
          {
            "target": "default",
            "cache-from": [
              "type=registry,ref=ghcr.io/${{ github.repository }}/build-cache"
            ],
            "cache-to": [
              "type=registry,ref=ghcr.io/${{ github.repository }}/build-cache,mode=max"
            ]
          }
          EOF

      - name: Build
        run: docker buildx bake --file compose.yml --file docker-compose-cache.json
    
      - name: Run
        run: docker compose up -d
        
      - name: Wait for completion and check exit codes
        run: |
          # Wait for emf-generator to finish
          docker compose wait emf-generator
          EXIT_CODE=$(docker inspect $(docker compose ps -a -q emf-generator) --format='{{.State.ExitCode}}')

          if [ "$EXIT_CODE" != "0" ]; then
            echo "emf-generator failed with exit code $EXIT_CODE"
            docker compose logs
            exit 1
          fi
          
          # Check other containers' health
          if [ "$(docker compose ps -q -f status=exited -f exitcode=1)" ]; then
            echo "One or more containers exited with non-zero status"
            docker compose logs
            exit 1
          fi

      - name: Cleanup
        if: always()
        run: docker compose down -v
